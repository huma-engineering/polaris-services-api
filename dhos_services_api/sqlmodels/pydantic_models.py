# generated by datamodel-codegen:
#   filename:  openapi.yaml

from __future__ import annotations

from datetime import date, datetime, timezone
from typing import Dict, List, Optional, Union

from pydantic import BaseModel, Field, validator


class Error(BaseModel):
    """
    An error response in json format
    """

    code: int = Field(..., description="HTTP response code", example=404)
    message: Optional[str] = Field(
        None, description="Message attached to response", example="Not Found"
    )


class NoteResponse(BaseModel):
    """
    Note response
    """

    class Config:
        orm_mode = True

    content: str = Field(
        ..., description="Contents of the note", example="Patient is a delight"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    clinician_uuid: str = Field(
        ...,
        description="Clinician UUID",
        example="48378ca6-d28b-424a-9408-f8e00b9af657",
    )


class ObservableEntityResponse(BaseModel):
    """
    Observable entity response
    """

    class Config:
        orm_mode = True

    sct_code: str = Field(
        ..., description="SNOMED code for the observable entity", example="443911005"
    )
    date_observed: date = Field(
        ..., description="ISO8601 date for the observable entity", example="2020-01-01"
    )
    value_as_string: Optional[str] = Field(
        ..., description="Observable entity value", example="11"
    )
    metadata: Dict[str, object] = Field(
        {},
        description="Metadata related to the observable entity",
        example={"0hr": 50, "1hr": 100, "2hr": 75, "3hr": None},
        alias="metadata_",
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class NonMedicationActionResponse(BaseModel):
    """
    Non medication action
    """

    class Config:
        orm_mode = True

    action_sct_code: str = Field(
        ..., description="SNOMED code for the action", example="281090004"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class DoseChange(BaseModel):
    """
    Dose change
    """

    class Config:
        orm_mode = True

    medication_id: Optional[str] = Field(
        ...,
        description="UUID of the medication",
        example="bbc1a393-818f-417a-a6e5-76f9338a6a1c",
    )
    dose_amount: Optional[float] = Field(
        ..., description="Amount of the medication", example=1.5
    )
    routine_sct_code: Optional[str] = Field(
        None, description="SNOMED code for the dose", example="12345"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class DoseResponse(BaseModel):
    """
    Dose response
    """

    class Config:
        orm_mode = True

    medication_id: str = Field(
        ...,
        description="UUID of the medication",
        example="bbc1a393-818f-417a-a6e5-76f9338a6a1c",
    )
    dose_amount: float = Field(..., description="Amount of the medication", example=1.5)
    routine_sct_code: Optional[str] = Field(
        None, description="SNOMED code for the dose", example="12345"
    )
    changes: List[DoseChange]
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class DoseHistory(BaseModel):
    """
    Dose history
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    clinician_uuid: Optional[str] = Field(
        None,
        description="Clinician UUID",
        example="48378ca6-d28b-424a-9408-f8e00b9af657",
    )
    dose: Optional[DoseResponse]
    action: Optional[str] = Field(
        None, description="Description of the change", example="Reduction by 2 units"
    )


class ManagementPlanResponse(BaseModel):
    """
    Management plan response
    """

    class Config:
        orm_mode = True

    sct_code: str = Field(
        ..., description="SNOMED code for the management plan type", example="386359008"
    )
    start_date: Optional[date] = Field(
        None, description="ISO8601 date when plan started", example="2020-01-01"
    )
    end_date: Optional[date] = Field(
        None, description="ISO8601 date when plan ended", example="2020-05-01"
    )
    actions: Optional[List[NonMedicationActionResponse]]
    doses: Optional[List[DoseResponse]]
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    plan_history: Optional[List[str]] = Field(
        None,
        description="SNOMED codes for previous management plan types",
        example=["67866001"],
    )
    dose_history: Optional[List[DoseHistory]]


class ManagementPlanSearchResponse(ManagementPlanResponse):
    actions: Optional[List[NonMedicationActionResponse]] = Field(
        [], alias="_dummy_field"
    )
    doses: Optional[List[DoseResponse]] = Field([], alias="_dummy_field")
    dose_history: Optional[List[DoseHistory]] = Field([], alias="_dummy_field")


class CompactManagementPlanResponse(BaseModel):
    """
    Management plan response
    """

    class Config:
        orm_mode = True

    sct_code: str = Field(
        ..., description="SNOMED code for the management plan type", example="386359008"
    )
    start_date: Optional[date] = Field(
        None, description="ISO8601 date when plan started", example="2020-01-01"
    )
    end_date: Optional[date] = Field(
        None, description="ISO8601 date when plan ended", example="2020-05-01"
    )


class ReadingsPlanChange(BaseModel):
    """
    Readings plan change
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    days_per_week_to_take_readings: Optional[int] = Field(
        None,
        description="Days per week patient is expected to take readings",
        example=5,
    )
    readings_per_day: Optional[int] = Field(
        None,
        description="Number of readings per day patient is expected to take",
        example=4,
    )


class ReadingsPlanResponse(BaseModel):
    """
    Readings plan response
    """

    class Config:
        orm_mode = True

    sct_code: str = Field(
        ..., description="SNOMED code for the readings plan type", example="33747003"
    )
    start_date: date = Field(
        ..., description="ISO8601 date when plan started", example="2020-01-01"
    )
    days_per_week_to_take_readings: int = Field(
        ..., description="Days per week patient is expected to take readings", example=5
    )
    readings_per_day: int = Field(
        ...,
        description="Number of readings per day patient is expected to take",
        example=4,
    )
    end_date: Optional[date] = Field(
        None, description="ISO8601 date when plan ended", example="2020-05-01"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    changes: List[ReadingsPlanChange]


class DiagnosisResponse(BaseModel):
    """
    Diagnosis response
    """

    class Config:
        orm_mode = True

    sct_code: str = Field(
        ..., description="SNOMED code for the diagnosis", example="11687002"
    )
    diagnosis_other: Optional[str] = Field(
        None,
        description="Freetext field for diagnosis description",
        example="Diabetes type 4",
    )
    diagnosed: Optional[date] = Field(
        None, description="ISO8601 date of diagnosis", example="2020-01-01"
    )
    resolved: Optional[date] = Field(
        None, description="ISO8601 date of resolution", example="2020-01-01"
    )
    episode: Optional[int] = Field(None, example=1)
    presented: Optional[date] = Field(
        None, description="ISO8601 date of presentation", example="2020-01-01"
    )
    diagnosis_tool: Optional[List[str]] = Field(
        None,
        description="List of SNOMED code for the diagnosis tools",
        example=["D0000011"],
    )
    diagnosis_tool_other: Optional[str] = Field(
        None,
        description="Freetext field for the diagnosis tool",
        example="My own intuition",
    )
    risk_factors: Optional[List[str]] = Field(
        None, description="List of SNOMED code for risk factors", example=["199228009"]
    )
    observable_entities: List[ObservableEntityResponse]
    management_plan: Optional[ManagementPlanResponse]
    readings_plan: Optional[ReadingsPlanResponse]
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class DiagnosisSearchResponse(DiagnosisResponse):
    observable_entities: List[ObservableEntityResponse] = Field(
        [], alias="_dummy_field"
    )
    management_plan: Optional[ManagementPlanSearchResponse]
    readings_plan: Optional[ReadingsPlanResponse] = Field(None, alias="_dummy_field")


class CompactDiagnosisResponse(BaseModel):
    """
    Diagnosis response
    """

    class Config:
        orm_mode = True

    sct_code: str = Field(
        ..., description="SNOMED code for the diagnosis", example="11687002"
    )
    diagnosed: Optional[date] = Field(
        None, description="ISO8601 date of diagnosis", example="2020-01-01"
    )
    management_plan: Optional[CompactManagementPlanResponse]
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )


class BabyResponse(BaseModel):
    """
    Baby
    """

    class Config:
        orm_mode = True

    sex: Optional[str] = Field(
        None, description="SNOMED code for baby's sex", example="248152002"
    )
    first_name: Optional[str] = Field(
        None, description="Baby's first name", example="Joan"
    )
    last_name: Optional[str] = Field(
        None, description="Baby's last name", example="Speedwell"
    )
    dob: Optional[date] = Field(
        None, description="Baby's date of birth in ISO8601 format", example="1978-05-06"
    )
    phone_number: Optional[str] = Field(
        None, description="Baby's phone number", example="07777777777"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class CompactBabyResponse(BaseModel):
    """
    Baby
    """

    class Config:
        orm_mode = True

    dob: Optional[date] = Field(
        None, description="Baby's date of birth in ISO8601 format", example="1978-05-06"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )


class DeliveryResponse(BaseModel):
    """
    Delivery response
    """

    class Config:
        orm_mode = True

    birth_outcome: Optional[str] = Field(
        None, description="SNOMED code for birth outcome", example="48782003"
    )
    outcome_for_baby: Optional[str] = Field(
        None, description="SNOMED code for outcome for baby", example="169826009"
    )
    neonatal_complications: Optional[List[str]] = Field(
        None,
        description="List of SNOMED codes for neonatal complications",
        example=["52767006"],
    )
    neonatal_complications_other: Optional[str] = Field(
        None,
        description="Freetext field for other neonatal complications",
        example="Baby is too cute",
    )
    admitted_to_special_baby_care_unit: Optional[bool] = Field(
        None,
        description="Whether the patient was admitted to special baby care unit",
        example=False,
    )
    birth_weight_in_grams: Optional[int] = Field(
        None, description="Birth weight (g)", example=2000
    )
    length_of_postnatal_stay_for_baby: Optional[int] = Field(
        None, description="Length of postnatal stay for baby in days", example=3
    )
    apgar_1_minute: Optional[int] = Field(
        None, description="APGAR score 1 minute after birth", example=9
    )
    apgar_5_minute: Optional[int] = Field(
        None, description="APGAR score 5 minutes after birth", example=10
    )
    feeding_method: Optional[str] = Field(
        None, description="SNOMED code for feeding method", example="226789007"
    )
    date_of_termination: Optional[date] = Field(
        None, description="ISO8601 date of termination", example="2020-01-01"
    )
    patient: Optional[BabyResponse]
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class CompactDeliveryResponse(BaseModel):
    """
    Delivery response
    """

    class Config:
        orm_mode = True

    patient: Optional[CompactBabyResponse]
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )


class PregnancyResponse(BaseModel):
    """
    Pregnancy response
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    estimated_delivery_date: date = Field(
        ..., description="ISO8601 date of expected delivery", example="2020-01-01"
    )
    planned_delivery_place: Optional[str] = Field(
        None, description="SNOMED code for planned delivery place", example="310586008"
    )
    length_of_postnatal_stay_in_days: Optional[int] = Field(
        None, description="Length of postnatal stay in days", example=3
    )
    colostrum_harvesting: Optional[bool] = Field(
        None, description="Whether colostrum harvesting occurred", example=True
    )
    expected_number_of_babies: Optional[int] = Field(
        None, description="Expected number of babies", example=1
    )
    pregnancy_complications: Optional[List[str]] = Field(
        None,
        description="List of SNOMED codes for any pregnancy complications",
        example=["48194001"],
    )
    induced: Optional[bool] = Field(
        None, description="Whether pregnancy was induced", example=False
    )
    deliveries: Optional[List[DeliveryResponse]]
    height_at_booking_in_mm: Optional[int] = Field(
        None, description="Height (mm) at booking", example=1600
    )
    weight_at_diagnosis_in_g: Optional[int] = Field(
        None, description="Weight (g) at diagnosis", example=6000
    )
    weight_at_booking_in_g: Optional[int] = Field(
        None, description="Weight (g) at booking", example=6000
    )
    weight_at_36_weeks_in_g: Optional[int] = Field(
        None, description="Weight (g) at 36 weeks' gestation", example=6200
    )
    delivery_place: Optional[str] = Field(
        None, description="SNOMED code for actual delivery place", example="D0000009"
    )
    delivery_place_other: Optional[str] = Field(
        None, description="Freetext field for actual delivery place", example="At home"
    )
    first_medication_taken_recorded: Optional[date] = Field(
        None,
        description="ISO8601 date for when medication was first taken",
        example="2020-01-01",
    )
    first_medication_taken: Optional[str] = Field(
        None,
        description="Description of when medication was first taken",
        example="5 days ago",
    )


class CompactPregnancyResponse(BaseModel):
    """
    Pregnancy response
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    estimated_delivery_date: date = Field(
        ..., description="ISO8601 date of expected delivery", example="2020-01-01"
    )
    deliveries: Optional[List[CompactDeliveryResponse]]


class VisitResponse(BaseModel):
    """
    Visit response
    """

    class Config:
        orm_mode = True

    visit_date: datetime = Field(
        ..., description="ISO8601 datetime of visit", example="2020-01-01T10:42:00"
    )
    location: str = Field(
        ...,
        description="UUID of location where visit occurred",
        example="ccc602d9-eef1-4e48-b012-8312274bcab1",
    )
    summary: Optional[str] = Field(
        None, description="Freetext summary of visit", example="Patient was healthy"
    )
    diagnoses: List[str] = Field(
        [],
        description="List of diagnosis UUIDs relevant to the visit",
        example=["485d3d40-7c70-4b60-a3f3-f79ae1f55ff9"],
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    clinician_uuid: str = Field(
        ...,
        description="UUID of clinician with whom visit occurred",
        example="963410f7-d92e-4b0a-9be1-f141df2a9d35",
    )


class RecordHistoryResponse(BaseModel):
    """
    Record history response
    """

    class Config:
        orm_mode = True

    parity: Optional[int] = Field(
        None,
        description="Gestational parity (number of pregnancies carried beyond 20 weeks)",
        example=2,
    )
    gravidity: Optional[int] = Field(
        None, description="Gestational gravidity (number of pregnancies)", example=2
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class RecordResponse(BaseModel):
    """
    Record response
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    notes: List[NoteResponse]
    diagnoses: List[DiagnosisResponse]
    pregnancies: List[PregnancyResponse]
    visits: List[VisitResponse]
    history: Optional[RecordHistoryResponse] = Field(...)


class CompactRecordResponse(BaseModel):
    """
    Record response
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    diagnoses: List[CompactDiagnosisResponse]
    pregnancies: List[CompactPregnancyResponse]


class RecordSearchResponse(RecordResponse):
    # Some fields are set in the Neo responses but always empty or None
    notes: List[NoteResponse] = Field([], alias="_dummy_field")
    history: None = Field(None, alias="_dummy_field")
    visits: List[VisitResponse] = Field([], alias="_dummy_field")
    diagnoses: List[DiagnosisSearchResponse]  # type:ignore


class AddressResponse(BaseModel):
    """
    Address response
    """

    class Config:
        orm_mode = True

    address_line_1: Optional[str] = Field(
        None, description="First line of address", example="Flat 14"
    )
    address_line_2: Optional[str] = Field(
        None, description="Second line of address", example="11 Spring Close"
    )
    address_line_3: Optional[str] = Field(
        None, description="Third line of address", example="Summerville"
    )
    address_line_4: Optional[str] = Field(
        None, description="Fourth line of address", example="Autumn City"
    )
    locality: Optional[str] = Field(
        None, description="Locality of address", example="Wintershire"
    )
    region: Optional[str] = Field(
        None, description="Region of address", example="England"
    )
    postcode: Optional[str] = Field(
        None, description="Postcode of address", example="A11 111"
    )
    country: Optional[str] = Field(
        None, description="Country of address", example="United Kingdom"
    )
    lived_from: Optional[date] = Field(
        None, description="ISO8601 date for start of residence", example="2017-09-01"
    )
    lived_until: Optional[date] = Field(
        None, description="ISO8601 date for end of residence", example="2019-03-23"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class DhProductChangeResponse(BaseModel):
    """
    Product change
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    event: str = Field(
        ..., description="Event resulting in a change", example="archive"
    )


class DhProductSearchResponse(BaseModel):
    """
    Drayson health product response
    """

    class Config:
        orm_mode = True

    product_name: str = Field(..., description="Product name", example="SEND")
    opened_date: date = Field(..., description="Opened date", example="2018-01-01")
    closed_date: Optional[date] = Field(
        None, description="Closed date", example="2018-06-01"
    )
    closed_reason: Optional[str] = Field(
        None, description="Closed reason", example="Some reason"
    )
    closed_reason_other: Optional[str] = Field(
        None, description="Closed reason other", example="Some other reason"
    )
    accessibility_discussed: Optional[bool] = Field(
        None, description="Whether accessibility was discussed", example=True
    )
    accessibility_discussed_date: Optional[date] = Field(
        None, description="When was accessibility discussed", example="2019-10-07"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    accessibility_discussed_with: Optional[str]
    monitored_by_clinician: bool


class DhProductResponse(DhProductSearchResponse):
    changes: Optional[List[DhProductChangeResponse]]


class CompactDhProductResponse(BaseModel):
    """
    Drayson health product response
    """

    class Config:
        orm_mode = True

    product_name: str = Field(..., description="Product name", example="SEND")
    opened_date: date = Field(..., description="Opened date", example="2018-01-01")
    closed_date: Optional[date] = Field(
        None, description="Closed date", example="2018-06-01"
    )
    closed_reason: Optional[str] = Field(
        None, description="Closed reason", example="Some reason"
    )
    closed_reason_other: Optional[str] = Field(
        None, description="Closed reason other", example="Some other reason"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    monitored_by_clinician: bool


class PatientTermsResponseV1(BaseModel):
    """
    Patient terms agreement response
    """

    class Config:
        orm_mode = True

    product_name: str = Field(
        ..., description="Product whose terms have been agreed to", example="GDM"
    )
    version: int = Field(
        ..., description="Version number of TOU terms agreed to", example=3
    )
    accepted_timestamp: Optional[datetime] = Field(
        None,
        description="ISO8601 timestamp of acceptance",
        example="2020-01-01T00:00:00.000Z",
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class PatientTermsResponseV2(BaseModel):
    """
    Patient terms agreement response
    """

    class Config:
        orm_mode = True

    product_name: str = Field(
        ..., description="Product whose terms have been agreed to", example="GDM"
    )
    tou_version: int = Field(
        ..., description="Version number of TOU terms agreed to", example=3
    )
    tou_accepted_timestamp: Optional[datetime] = Field(
        None,
        description="ISO8601 timestamp of acceptance",
        example="2020-01-01T00:00:00.000Z",
    )
    patient_notice_version: int = Field(
        ..., description="Version number of PN terms agreed to", example=3
    )
    patient_notice_accepted_timestamp: Optional[datetime] = Field(
        None,
        description="ISO8601 timestamp of acceptance",
        example="2020-01-01T00:00:00.000Z",
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )


class PatientResponse(BaseModel):
    """
    Patient response
    """

    class Config:
        orm_mode = True

    first_name: Optional[str] = Field(
        ..., description="Patient's first name", example="Joan"
    )
    last_name: Optional[str] = Field(
        ..., description="Patient's last name", example="Speedwell"
    )
    hospital_number: Optional[str] = Field(
        None, description="Patient's hospital number (MRN)", example="232434"
    )
    record: RecordResponse
    phone_number: Optional[str] = Field(
        None, description="Patient's phone number", example="07777777777"
    )
    allowed_to_text: Optional[bool] = Field(
        None,
        description="Whether SMS messages can be sent to the patient",
        example=True,
    )
    allowed_to_email: Optional[bool] = Field(
        None, description="Whether emails can be sent to the patient", example=True
    )
    dob: Optional[date] = Field(
        None,
        description="Patient's date of birth in ISO8601 format",
        example="1978-05-06",
    )
    dod: Optional[date] = Field(
        None,
        description="Patient's date of death in ISO8601 format",
        example="2020-01-01",
    )
    nhs_number: Optional[str] = Field(
        None, description="Patient's 10-digit NHS number", example="1111111111"
    )
    email_address: Optional[str] = Field(
        None, description="Patient's email address", example="joan.speedwell@mail.com"
    )
    ethnicity: Optional[str] = Field(
        None, description="SNOMED code for patient's ethnicity", example="186019001"
    )
    ethnicity_other: Optional[str] = Field(
        None,
        description="Freetext field for for patient's ethnicity",
        example="Extraterrestrial",
    )
    sex: Optional[str] = Field(
        None, description="SNOMED code for patient's sex", example="248152002"
    )
    height_in_mm: Optional[int] = Field(None, description="Height (mm)", example=1600)
    weight_in_g: Optional[int] = Field(None, description="Weight (g)", example=6000)
    highest_education_level: Optional[str] = Field(
        None,
        description="SNOMED code for patient's highest education level",
        example="224297003",
    )
    highest_education_level_other: Optional[str] = Field(
        None,
        description="Freetext field for patient's highest education level",
        example="Arch-chancellor, Unseen University",
    )
    accessibility_considerations: List[str] = Field(
        [],
        description="List of SNOMED code for patient's accessibility considerations",
        example=["105597003"],
    )
    accessibility_considerations_other: Optional[str] = Field(
        None,
        description="Freetext field for patient's accessibility considerations",
        example="Patient has no ribs",
    )
    other_notes: Optional[str] = Field(
        None,
        description="Freeteext field for patient notes",
        example="Patient is delightful",
    )
    locations: Optional[List[str]] = Field(
        None,
        description="UUIDs of locations with which patient is associated",
        example=["ea9fd397-6ff6-4b29-a4d2-c9d36bfa2737"],
    )
    personal_addresses: List[AddressResponse]
    dh_products: List[DhProductResponse]
    fhir_resource_id: Optional[str] = Field(
        None,
        description="Patient's ID in a trustomer's FHIR EPR system (null if the patient is not presented there)",
        example="ea9fd397-6ff6-4b29-a4d2-c9d36bfa2737",
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    terms_agreement: Union[
        PatientTermsResponseV2, PatientTermsResponseV1, None
    ] = Field(None, alias="_latest_terms_agreement")

    bookmarked: bool = Field(
        False, description="Whether patient is bookmarked", example=False
    )
    has_been_bookmarked: Optional[bool] = Field(
        None, description="Whether patient has ever been bookmarked", example=True
    )


class CompactPatientResponse(BaseModel):
    """
    Patient response
    """

    class Config:
        orm_mode = True

    first_name: Optional[str] = Field(
        ..., description="Patient's first name", example="Joan"
    )
    last_name: Optional[str] = Field(
        ..., description="Patient's last name", example="Speedwell"
    )
    hospital_number: Optional[str] = Field(
        ..., description="Patient's hospital number (MRN)", example="232434"
    )
    record: CompactRecordResponse
    dob: Optional[date] = Field(
        None,
        description="Patient's date of birth in ISO8601 format",
        example="1978-05-06",
    )
    nhs_number: Optional[str] = Field(
        None, description="Patient's 10-digit NHS number", example="1111111111"
    )
    sex: Optional[str] = Field(
        None, description="SNOMED code for patient's sex", example="248152002"
    )
    locations: Optional[List[str]] = Field(
        None,
        description="UUIDs of locations with which patient is associated",
        example=["ea9fd397-6ff6-4b29-a4d2-c9d36bfa2737"],
    )
    dh_products: List[CompactDhProductResponse]
    fhir_resource_id: Optional[str] = Field(
        None,
        description="Patient's ID in a trustomer's FHIR EPR system (null if the patient is not presented there)",
        example="ea9fd397-6ff6-4b29-a4d2-c9d36bfa2737",
    )
    bookmarked: bool = Field(
        False, description="Whether patient is bookmarked", example=False
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )


class PatientSearchResponse(PatientResponse):
    record: RecordSearchResponse
    personal_addresses: List[AddressResponse] = Field(
        [], alias="_dummy_field"
    )  # type:ignore
    dh_products: List[DhProductSearchResponse]  # type:ignore


class AbbreviatedManagementPlanResponse(BaseModel):
    """
    Abbreviated Management plan response
    """

    class Config:
        orm_mode = True

    doses: List[DoseResponse]


class AbbreviatedDiagnosisResponse(BaseModel):
    """
    Abbreviated Diagnosis response
    """

    class Config:
        orm_mode = True

    management_plan: AbbreviatedManagementPlanResponse


class AbbreviatedRecordResponse(BaseModel):
    """
    Abbreviated Record response
    """

    class Config:
        orm_mode = True

    diagnoses: List[AbbreviatedDiagnosisResponse]


class AbbreviatedPatientResponse(BaseModel):
    """
    Abbreviated patient response
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    locations: List[str] = Field(
        ...,
        description="UUIDs of locations with which patient is associated",
        example=["ea9fd397-6ff6-4b29-a4d2-c9d36bfa2737"],
    )
    record: AbbreviatedRecordResponse = Field(
        ..., description="Abbreviated patient record"
    )


class ClosePatientRequest(BaseModel):
    """
    Close patient request
    """

    class Config:
        orm_mode = True

    closed_date: date = Field(
        ...,
        description="ISO8601 date for when patient was closed",
        example="2017-09-01",
    )
    closed_reason: Optional[str] = Field(
        None,
        description="SNOMED code for reason for closing patient",
        example="289256000",
    )
    closed_reason_other: Optional[str] = Field(
        None,
        description="Freetext field for reason for closing patient",
        example="Patient created in error",
    )


class SimpleReadingsPlan(BaseModel):
    """
    Simple readings plan
    """

    class Config:
        orm_mode = True

    created: datetime = Field(
        ...,
        description="ISO8601 timestamp of acceptance",
        example="2020-01-01T00:00:00.000Z",
    )
    days_per_week_to_take_readings: Optional[int] = Field(
        ..., description="Days per week patient is expected to take readings", example=5
    )
    readings_per_day: Optional[int] = Field(
        ...,
        description="Number of readings per day patient is expected to take",
        example=4,
    )

    @validator("created", pre=True)
    def created_validate(cls, dt: object) -> object:
        if isinstance(dt, float):
            return datetime.fromtimestamp(dt).replace(tzinfo=timezone.utc)
        return dt


class ActivityAlertingPatientResponse(BaseModel):
    """
    Activity alerting patient response
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    first_name: str = Field(..., description="Patient's first name", example="Joan")
    locations: List[str] = Field(
        ...,
        description="UUIDs of locations with which patient is associated",
        example=["ea9fd397-6ff6-4b29-a4d2-c9d36bfa2737"],
    )
    readings_plans: List[SimpleReadingsPlan]


class ValidatePatientRequest(BaseModel):
    """
    Validate patient request
    """

    class Config:
        orm_mode = True

    first_name: Optional[str] = Field(
        None, description="Patient's first name", example="Joan"
    )
    last_name: Optional[str] = Field(
        None, description="Patient's last name", example="Speedwell"
    )
    hospital_number: Optional[str] = Field(
        None, description="Patient's hospital number (MRN)", example="232434"
    )
    dob: Optional[date] = Field(
        None,
        description="Patient's date of birth in ISO8601 format",
        example="1978-05-06",
    )


class FirstMedicationRequest(BaseModel):
    """
    First medication request
    """

    class Config:
        orm_mode = True

    first_medication_taken: str = Field(
        ...,
        description="Patient's description of when the first medication was taken",
        example="3 days ago",
    )
    first_medication_taken_recorded: str = Field(
        ...,
        description="ISO8601 date for the time at which the patient reported having first taken medication",
        example="2020-01-01",
    )


class DiabetesDiagnosisResponse(BaseModel):
    """
    Diagnosis request
    """

    class Config:
        orm_mode = True

    sct_code: str = Field(
        ..., description="SNOMED code for the diagnosis", example="11687002"
    )
    diagnosis_other: Optional[str] = Field(
        None,
        description="Freetext field for diagnosis description",
        example="Diabetes type 4",
    )
    readings_plan: Optional[ReadingsPlanResponse] = Field(...)


class DiabetesRecordResponse(BaseModel):
    """
    Diabetes Record response
    """

    class Config:
        orm_mode = True

    diagnoses: List[DiabetesDiagnosisResponse]


class DhDiabetesProductResponse(BaseModel):
    """
    Drayson health product response
    """

    class Config:
        orm_mode = True

    product_name: str = Field(..., description="Product name", example="SEND")
    opened_date: date = Field(..., description="Opened date", example="2018-01-01")
    closed_date: Optional[date] = Field(
        None, description="Closed date", example="2018-06-01"
    )
    closed_reason: Optional[str] = Field(
        None, description="Closed reason", example="Some reason"
    )
    closed_reason_other: Optional[str] = Field(
        None, description="Closed reason other", example="Some other reason"
    )
    accessibility_discussed: Optional[bool] = Field(
        None, description="Whether accessibility was discussed", example=True
    )
    accessibility_discussed_date: Optional[date] = Field(
        None, description="When was accessibility discussed", example="2019-10-07"
    )
    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    monitored_by_clinician: bool


class PatientDiabetesResponse(BaseModel):
    """
    Patient diabetes request
    """

    class Config:
        orm_mode = True

    uuid: str = Field(
        ...,
        description="Universally unique identifier for object",
        example="2c4f1d24-2952-4d4e-b1d1-3637e33cc161",
    )
    created: Optional[datetime] = Field(
        None,
        description="When the object was created",
        example="2017-09-23T08:29:19.123+00:00",
    )
    created_by: Optional[str] = Field(
        None,
        description="UUID of the user that created the object",
        example="d26570d8-a2c9-4906-9c6a-ea1a98b8b80f",
    )
    modified: Optional[datetime] = Field(
        None,
        description="When the object was modified",
        example="2017-09-23T08:29:19.123+00:00",
    )
    modified_by: Optional[str] = Field(
        None,
        description="UUID of the user that modified the object",
        example="2a0e26e5-21b6-463a-92e8-06d7290067d0",
    )
    first_name: Optional[str] = Field(
        ..., description="Patient's first name", example="Joan"
    )
    last_name: Optional[str] = Field(
        ..., description="Patient's last name", example="Speedwell"
    )
    hospital_number: str = Field(
        ..., description="Patient's hospital number (MRN)", example="232434"
    )
    record: DiabetesRecordResponse
    dh_products: List[DhDiabetesProductResponse]
    dob: Optional[date] = Field(
        None,
        description="Patient's date of birth in ISO8601 format",
        example="1978-05-06",
    )
    dod: Optional[date] = Field(
        None,
        description="Patient's date of death in ISO8601 format",
        example="2020-01-01",
    )
    nhs_number: Optional[str] = Field(
        None, description="Patient's 10-digit NHS number", example="1111111111"
    )
    sex: Optional[str] = Field(
        None, description="SNOMED code for patient's sex", example="248152002"
    )
    locations: Optional[List[str]] = Field(
        None,
        description="UUIDs of locations with which patient is associated",
        example=["ea9fd397-6ff6-4b29-a4d2-c9d36bfa2737"],
    )


class SearchPatient(BaseModel):
    class Config:
        orm_mode = True

    sex: Optional[str] = Field(...)
    first_name: Optional[str] = Field(...)
    dob: Optional[date] = Field(...)
    patient_uuid: str
    hospital_number: Optional[str] = Field(...)
    nhs_number: Optional[str] = Field(...)
    has_clinician_bookmark: bool = Field(False)
    last_name: Optional[str] = Field(...)


class SearchResultsResponse(BaseModel):
    class Config:
        orm_mode = True

    total: Optional[int] = Field(None, example=2)
    results: Optional[List[SearchPatient]]
